{"version":3,"sources":["serviceWorker.ts","app/pages/LoginPage.tsx","app/components/ui/PageContent.tsx","app/components/ui/TitleBlock.tsx","app/components/ui/Headers.tsx","app/common/Color.tsx","app/components/ui/FormSection.tsx","app/components/ui/Inputs.tsx","app/components/calculator/ShipSection.tsx","app/components/calculator/LiguidSection.tsx","app/components/calculator/CalculateFormContainer.tsx","app/pages/CalculatorPage.tsx","app/assets/svg/EquinorIcon.tsx","app/components/ui/NavBar.tsx","app/components/ui/SiteMenu.tsx","app/components/ui/SiteContent.tsx","app/pages/ResultsPage.tsx","app/components/ui/SiteMenuLink.tsx","App.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","LoginPage","props","state","className","to","React","Component","PageContentStyled","styled","div","PageContent","children","TitleBlock","Color","H2","h2","LegendStyle","legend","CircleIcon","span","GREEN","LIGHT_GREEN","Legend","Fieldset","fieldset","FormSectionStyle","FormSection","legendText","index","Input","input","LIGHT_GRAY","GRAY","TextInput","attrs","type","NumberInput","Label","label","ShipInputs","ShipInput","p","ShipSection","ship","setShip","htmlFor","id","placeholder","value","name","onChange","e","target","country","LiquidInputs","LiquidInput","LiquidComponentInput","componentName","componentValue","toFixed","parseFloat","step","LiquidSection","liquid","setLiquid","nitrogen","style","flexGrow","height","display","flexDirection","flexWrap","justifyContent","alignContent","Object","keys","map","CALCULATE","gql","CalculateFormContainer","useState","methane","ethane","propane","iButane","nButane","iPentane","nPentane","nHexane","useMutation","variables","reduce","acc","unit","transport","volume","pressure","boilOffRate","fromDate","toDate","standard","combustionTemperature","measurementTemperature","idealGasReferenceState","addCalculation","data","onSubmit","preventDefault","Icon","CalculateWrapper","CalculatorPage","MenuIcon","size","width","viewBox","fill","xmlns","mask-type","maskUnits","x","y","fillRule","clipRule","d","mask","UserIcon","HomeIcon","ResultIcon","CalculatorIcon","EquinorIcon","icon","MENU","USER","HOME","CALCULATOR","RESULT","Error","defaultProps","NavBarStyled","nav","Header","NavBar","marginLeft","marginRight","SiteMenuStyled","SiteMenu","SiteContentStyled","SiteContent","CALCULATIONS_QUERY","ResultsWrapper","ResultItemStyled","ResultItem","ResultsPage","useQuery","loading","error","calculations","calculation","MenuLink","NavLink","activeStyle","color","MenuIconStyled","SiteMenuLink","NotFound","client","ApolloClient","uri","ReactDOM","render","exact","from","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.435231f0.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"./loginPage.css\";\n\nimport { Link } from \"react-router-dom\";\nimport React from \"react\";\n\nexport interface IProps { }\n\nexport interface IState { }\n\nexport class LoginPage extends React.Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"loginPage\">\n        <h1>Login page:</h1>\n        <p>\n          Test router:\n        <Link to=\"/\">Home</Link>\n          <Link to=\"/login\">Login</Link>\n        </p>\n      </div>\n    );\n  }\n};\n","import styled from 'styled-components';\nimport React from \"react\";\n\nconst PageContentStyled = styled.div`\n  width: 100%;\n  display: flex;\n  flex-grow: 1;\n  height: 100%;\n  flex-direction: column;\n`;\n\nexport const PageContent: React.FunctionComponent = (props) => (\n  <PageContentStyled>\n    {props.children}\n  </PageContentStyled>\n);\n","import './TitleBlock.css';\n\nimport React from \"react\";\n\nexport const TitleBlock: React.FunctionComponent = (props) => (\n  <div className=\"TitleBlock\">\n    <h1>{props.children}</h1>\n  </div>\n);\n","import styled from 'styled-components';\n\nexport const H2 = styled.h2`\n  font-family: Equinor,serif;\n  font-size: 24px;\n`;\n","\nexport enum Color {\n  GREEN = '#007079',\n  LIGHT_GREEN = '#CCE2E4',\n  ENERGY_RED = '#ff003a',\n  GRAY = '#6F6F6F',\n  LIGHT_GRAY = '#F7F7F7',\n}","import React from 'react';\nimport styled from 'styled-components';\nimport {Color} from '../../common/Color';\n\ninterface FieldsetProps {\n  legendText: string,\n  index: number,\n}\n\nconst LegendStyle = styled.legend`\n  display: flex;\n  align-items: center;\n  width: 45px;\n  height: 45px;\n  font-size: 26px;\n  font-family: Equinor,serif;\n`;\n\nconst CircleIcon = styled.span`\n  min-width: 40px;\n  min-height: 40px;\n  max-width: 40px;\n  max-height: 40px;\n  border-radius: 50%;\n  color: ${Color.GREEN};\n  background-color: ${Color.LIGHT_GREEN};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 20px;\n  margin-right: 20px;\n`;\n\nconst Legend: React.FC = ({children}) => {\n  return (\n    <LegendStyle>\n      {children}\n    </LegendStyle>\n  );\n};\n\nconst Fieldset = styled.fieldset`\n  display: flex;\n  width: 100%;\n`;\n\nconst FormSectionStyle = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin: 30px 0;\n`;\n\nexport const FormSection: React.FC<FieldsetProps> = ({legendText, children, index}) => {\n  return (\n    <FormSectionStyle>\n      <CircleIcon>\n        {index}\n      </CircleIcon>\n      <Fieldset>\n        <Legend>{legendText}</Legend>\n        {children}\n      </Fieldset>\n    </FormSectionStyle>\n  );\n};","import styled from 'styled-components';\nimport {Color} from '../../common/Color';\n\nconst Input = styled.input`\n  padding: 5px 10px;\n  background-color: ${Color.LIGHT_GRAY};\n  color: ${Color.GRAY};\n  border: none;\n  border-bottom: 1px solid ${Color.GRAY};\n  font-size: 16px;\n  font-family: Equinor,serif;\n  line-height: 24px;\n  width: 100%;\n  box-sizing: border-box;\n`;\n\nexport const TextInput = styled(Input).attrs({\n  type: 'text',\n})`\n    max-width: 300px;\n`;\n\nexport const NumberInput = styled(Input).attrs({\n  type: 'number',\n})`\n  max-width: 100px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  color: ${Color.GRAY};\n  font-size: 12px;\n  font-family: Equinor,serif;\n  padding: 5px 10px;\n`;","import React from 'react';\nimport {FormSection} from '../ui/FormSection';\nimport {Label, TextInput} from '../ui/Inputs';\nimport styled from 'styled-components';\n\nexport interface Ship {\n  country: string,\n  name: string,\n}\n\ninterface ShipSectionProps {\n  ship: Ship,\n\n  setShip(ship: Ship): void,\n}\n\nconst ShipInputs = styled.span`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst ShipInput = styled.p`\n  margin-right: 25px;\n`;\n\nexport const ShipSection: React.FC<ShipSectionProps> = ({ship, setShip}) => (\n  <FormSection legendText='Ship' index={1}>\n    <ShipInputs>\n      <ShipInput>\n        <Label htmlFor='ship-name'>\n          Name\n        </Label>\n        <TextInput\n          id='ship-name'\n          placeholder='Name'\n          value={ship.name}\n          onChange={e => setShip({...ship, name: e.target.value})}\n        />\n      </ShipInput>\n      <ShipInput>\n        <Label htmlFor='ship-country'>\n          Country\n        </Label>\n        <TextInput\n          id='ship-country'\n          placeholder='Country'\n          value={ship.country}\n          onChange={e => setShip({...ship, country: e.target.value})}\n        />\n      </ShipInput>\n    </ShipInputs>\n  </FormSection>\n);","import styled from 'styled-components';\nimport React from 'react';\nimport {FormSection} from '../ui/FormSection';\nimport {Label, NumberInput} from '../ui/Inputs';\n\n\nexport interface Liquid {\n  nitrogen: number,\n  methane: number,\n  ethane: number,\n  propane: number,\n  iButane: number,\n  nButane: number,\n  iPentane: number,\n  nPentane: number,\n  nHexane: number,\n}\n\ninterface LiquidSectionProps {\n  liquid: Liquid,\n\n  setLiquid(liquid: Liquid): void,\n}\n\nconst LiquidInputs = styled.span`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst LiquidInput = styled.p`\n  margin-right: 25px;\n`;\n\ninterface LiquidComponentInputProps {\n  componentName: string,\n  componentValue: number,\n\n  onChange(value: number): void,\n}\n\nconst LiquidComponentInput: React.FC<LiquidComponentInputProps> = ({onChange, componentName, componentValue}) => {\n  return (\n    <LiquidInput>\n      <Label htmlFor={`liquid-${componentName}`}>\n        {componentName}\n      </Label>\n      <NumberInput\n        id={`liquid-${componentName}`}\n        value={componentValue.toFixed(2)}\n        onChange={e => onChange(parseFloat(e.target.value))}\n        step='0.01'\n      />\n    </LiquidInput>\n  );\n};\n\nexport const LiquidSection: React.FC<LiquidSectionProps> = ({liquid, setLiquid}) => (\n  <FormSection legendText='Liquid' index={2}>\n    <LiquidInputs>\n      <div>\n        <h3>Standard gases</h3>\n        <LiquidComponentInput\n          componentName='nitrogen'\n          componentValue={liquid.nitrogen}\n          onChange={value => setLiquid({...liquid, nitrogen: value})}\n        />\n      </div>\n      <div style={{flexGrow: 1, height: '180px'}}>\n        <h3>Light hydrocarbons</h3>\n        <div style={{display: 'flex', flexDirection: 'column', flexGrow: 1, flexWrap: 'wrap', height: '100%', justifyContent: 'flex-start', alignContent: 'flex-start'}}>\n          {\n            (Object.keys(liquid) as Array<keyof typeof liquid>).map(componentName => componentName !== 'nitrogen' && (\n              <LiquidComponentInput\n                componentName={componentName}\n                componentValue={liquid[componentName]}\n                onChange={value => setLiquid({...liquid, [componentName]: value})}\n              />\n            ))\n          }\n        </div>\n      </div>\n    </LiquidInputs>\n  </FormSection>\n);","import React, {useState} from 'react';\nimport {Ship, ShipSection} from './ShipSection';\nimport {Liquid, LiquidSection} from './LiguidSection';\nimport {gql} from 'apollo-boost';\nimport {useMutation} from '@apollo/react-hooks';\nimport {Calculation} from '../../pages/ResultsPage';\n\nconst CALCULATE = gql`\n    mutation Calculate($ship: ShipInput!, $liquid: FluidInput!, $transport: TransportInput!, $standard: StandardInput!) {\n        addCalculation(ship: $ship, fluid: $liquid, transport: $transport, standard: $standard) {\n            id\n        }\n    }\n`;\n\ninterface MetricInput {\n  value: number,\n  unit: string,\n}\n\ninterface FluidInput {\n  nitrogen: MetricInput,\n  methane: MetricInput,\n  ethane: MetricInput,\n  propane: MetricInput,\n  iButane: MetricInput,\n  nButane: MetricInput,\n  iPentane: MetricInput,\n  nPentane: MetricInput,\n  nHexane: MetricInput,\n}\n\nexport const CalculateFormContainer = () => {\n  const [ship, setShip] = useState<Ship>({name: '', country: ''});\n  const [liquid, setLiquid] = useState<Liquid>({\n    nitrogen: 0.691,\n    methane: 91.93,\n    ethane: 5.651,\n    propane: 1.296,\n    iButane: 0.122,\n    nButane: 0.289,\n    iPentane: 0.018,\n    nPentane: 0.003,\n    nHexane: 0.0,\n  });\n\n  const [addCalculation, {data}] = useMutation<Calculation, {ship: Ship, liquid: FluidInput, transport: any, standard: any}>(CALCULATE, {\n    variables: {\n      ship,\n      liquid: (Object.keys(liquid) as Array<keyof typeof liquid>).reduce((acc, componentName) => {\n        acc[componentName] = {value: liquid[componentName], unit: 'mol'};\n        return acc;\n      }, {} as any),\n      transport: {volume: 14000, pressure: 1.013, boilOffRate: 0.0015, fromDate: \"2019-09-17T06:54:07Z\", toDate: \"2019-09-17T06:54:07Z\"},\n      standard: {combustionTemperature: 15, measurementTemperature: 15, idealGasReferenceState: false},\n    }\n  });\n\n  return (\n    <form onSubmit={(e) => {\n      e.preventDefault();\n      addCalculation();\n    }}>\n      <ShipSection ship={ship} setShip={setShip}/>\n      <LiquidSection liquid={liquid} setLiquid={setLiquid}/>\n      <button>Compute</button>\n    </form>\n  );\n};","import React from \"react\";\nimport {PageContent} from \"../components/ui/PageContent\";\nimport {TitleBlock} from \"../components/ui/TitleBlock\";\nimport {H2} from '../components/ui/Headers';\nimport styled from 'styled-components';\nimport {CalculateFormContainer} from '../components/calculator/CalculateFormContainer';\n\nconst CalculateWrapper = styled.div`\n  padding: 25px;\n`;\n\nexport const CalculatorPage: React.FunctionComponent = () => (\n  <PageContent>\n    <TitleBlock>Calculator</TitleBlock>\n    <CalculateWrapper>\n      <H2>Calculate</H2>\n      <CalculateFormContainer/>\n    </CalculateWrapper>\n  </PageContent>\n);\n","import React from \"react\";\nimport {Color} from '../../common/Color';\n\nexport interface IProps {\n  icon: Icon,\n  size?: number,\n}\n\ninterface IconProps {\n  size?: number,\n}\n\nconst MenuIcon: React.FC<IconProps> = ({size}) => (\n  <svg width={size} height={size} viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <mask id=\"mask0\" mask-type=\"alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"16\" height=\"16\">\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n            d=\"M2 5.33333V4H14V5.33333H2ZM2 8.66667H14V7.33333H2V8.66667ZM2 12H14V10.6667H2V12Z\" fill=\"#007079\"/>\n    </mask>\n    <g mask=\"url(#mask0)\">\n      <rect width=\"16\" height=\"16\" fill={Color.GREEN}/>\n    </g>\n  </svg>\n);\n\nconst UserIcon: React.FC<IconProps> = ({size}) => (\n  <svg width={size} height={size} viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <mask id=\"mask1\" mask-type=\"alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"16\" height=\"16\">\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n            d=\"M7.99992 1.33331C4.31992 1.33331 1.33325 4.31998 1.33325 7.99998C1.33325 11.68 4.31992 14.6666 7.99992 14.6666C11.6799 14.6666 14.6666 11.68 14.6666 7.99998C14.6666 4.31998 11.6799 1.33331 7.99992 1.33331ZM4.71325 12.1866C4.99992 11.5866 6.74658 11 7.99992 11C9.25325 11 11.0066 11.5866 11.2866 12.1866C10.3799 12.9066 9.23992 13.3333 7.99992 13.3333C6.75992 13.3333 5.61992 12.9066 4.71325 12.1866ZM7.99992 9.66665C8.97325 9.66665 11.2866 10.06 12.2399 11.22C12.9199 10.3266 13.3333 9.21331 13.3333 7.99998C13.3333 5.05998 10.9399 2.66665 7.99992 2.66665C5.05992 2.66665 2.66659 5.05998 2.66659 7.99998C2.66659 9.21331 3.07992 10.3266 3.75992 11.22C4.71325 10.06 7.02659 9.66665 7.99992 9.66665ZM7.99992 3.99998C6.70658 3.99998 5.66658 5.03998 5.66658 6.33331C5.66658 7.62665 6.70658 8.66665 7.99992 8.66665C9.29325 8.66665 10.3333 7.62665 10.3333 6.33331C10.3333 5.03998 9.29325 3.99998 7.99992 3.99998ZM6.99992 6.33331C6.99992 6.88665 7.44659 7.33331 7.99992 7.33331C8.55325 7.33331 8.99992 6.88665 8.99992 6.33331C8.99992 5.77998 8.55325 5.33331 7.99992 5.33331C7.44659 5.33331 6.99992 5.77998 6.99992 6.33331Z\"\n            fill=\"#007079\"/>\n    </mask>\n    <g mask=\"url(#mask1)\">\n      <rect width=\"16\" height=\"16\" fill={Color.GREEN}/>\n    </g>\n  </svg>\n);\n\nconst HomeIcon: React.FC<IconProps> = ({size}) => (\n  <svg width={size} height={size} viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <mask id=\"mask2\" mask-type=\"alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"16\" height=\"16\">\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n            d=\"M1.33331 8.33331L7.99998 2.33331L14.6666 8.33331H12.6666V13.6666H8.66665V9.66665H7.33331V13.6666H3.33331V8.33331H1.33331ZM11.3333 7.12665L7.99998 4.12665L4.66665 7.12665V12.3333H5.99998V8.33331H9.99998V12.3333H11.3333V7.12665Z\"\n            fill=\"#007079\"/>\n    </mask>\n    <g mask=\"url(#mask2)\">\n      <rect width=\"16\" height=\"16\" fill=\"#6F6F6F\"/>\n    </g>\n  </svg>\n);\n\nconst ResultIcon: React.FC<IconProps> = ({size}) => (\n  <svg width={size} height={size} viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <mask id=\"mask4\" mask-type=\"alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"16\" height=\"16\">\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n            d=\"M13 2.33331L12 1.33331L11 2.33331L10 1.33331L9 2.33331L8 1.33331L7 2.33331L6 1.33331L5 2.33331L4 1.33331L3 2.33331L2 1.33331V14.6666L3 13.6666L4 14.6666L5 13.6666L6 14.6666L7 13.6666L8 14.6666L9 13.6666L10 14.6666L11 13.6666L12 14.6666L13 13.6666L14 14.6666V1.33331L13 2.33331ZM3.33333 12.7266V3.27331H12.6667V12.7266H3.33333ZM12 11.3333V9.99998H4V11.3333H12ZM12 7.33331V8.66665H4V7.33331H12ZM12 5.99998V4.66665H4V5.99998H12Z\"\n            fill=\"#007079\"/>\n    </mask>\n    <g mask=\"url(#mask4)\">\n      <rect width=\"16\" height=\"16\" fill=\"#6F6F6F\"/>\n    </g>\n  </svg>\n);\n\nconst CalculatorIcon: React.FC<IconProps> = ({size}) => (\n  <svg width={size} height={size} viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <mask id=\"mask3\" mask-type=\"alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"16\" height=\"16\">\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n            d=\"M2.66669 2.00002C2.66669 1.26669 3.26669 0.666687 4.00002 0.666687C4.73335 0.666687 5.33335 1.26669 5.33335 2.00002C5.33335 2.73335 4.73335 3.33335 4.00002 3.33335C3.26669 3.33335 2.66669 2.73335 2.66669 2.00002ZM6.66669 14C6.66669 13.2667 7.26669 12.6667 8.00002 12.6667C8.73335 12.6667 9.33335 13.2667 9.33335 14C9.33335 14.7334 8.73335 15.3334 8.00002 15.3334C7.26669 15.3334 6.66669 14.7334 6.66669 14ZM4.00002 4.66669C3.26669 4.66669 2.66669 5.26669 2.66669 6.00002C2.66669 6.73335 3.26669 7.33335 4.00002 7.33335C4.73335 7.33335 5.33335 6.73335 5.33335 6.00002C5.33335 5.26669 4.73335 4.66669 4.00002 4.66669ZM2.66669 10C2.66669 9.26669 3.26669 8.66669 4.00002 8.66669C4.73335 8.66669 5.33335 9.26669 5.33335 10C5.33335 10.7334 4.73335 11.3334 4.00002 11.3334C3.26669 11.3334 2.66669 10.7334 2.66669 10ZM12 3.33335C12.7334 3.33335 13.3334 2.73335 13.3334 2.00002C13.3334 1.26669 12.7334 0.666687 12 0.666687C11.2667 0.666687 10.6667 1.26669 10.6667 2.00002C10.6667 2.73335 11.2667 3.33335 12 3.33335ZM6.66669 10C6.66669 9.26669 7.26669 8.66669 8.00002 8.66669C8.73335 8.66669 9.33335 9.26669 9.33335 10C9.33335 10.7334 8.73335 11.3334 8.00002 11.3334C7.26669 11.3334 6.66669 10.7334 6.66669 10ZM12 8.66669C11.2667 8.66669 10.6667 9.26669 10.6667 10C10.6667 10.7334 11.2667 11.3334 12 11.3334C12.7334 11.3334 13.3334 10.7334 13.3334 10C13.3334 9.26669 12.7334 8.66669 12 8.66669ZM10.6667 6.00002C10.6667 5.26669 11.2667 4.66669 12 4.66669C12.7334 4.66669 13.3334 5.26669 13.3334 6.00002C13.3334 6.73335 12.7334 7.33335 12 7.33335C11.2667 7.33335 10.6667 6.73335 10.6667 6.00002ZM8.00002 4.66669C7.26669 4.66669 6.66669 5.26669 6.66669 6.00002C6.66669 6.73335 7.26669 7.33335 8.00002 7.33335C8.73335 7.33335 9.33335 6.73335 9.33335 6.00002C9.33335 5.26669 8.73335 4.66669 8.00002 4.66669ZM6.66669 2.00002C6.66669 1.26669 7.26669 0.666687 8.00002 0.666687C8.73335 0.666687 9.33335 1.26669 9.33335 2.00002C9.33335 2.73335 8.73335 3.33335 8.00002 3.33335C7.26669 3.33335 6.66669 2.73335 6.66669 2.00002Z\"\n            fill=\"#007079\"/>\n    </mask>\n    <g mask=\"url(#mask3)\">\n      <rect width=\"16\" height=\"16\" fill=\"#6F6F6F\"/>\n    </g>\n  </svg>\n);\n\nexport enum Icon {\n  MENU = 'menu',\n  USER = 'user',\n  HOME = 'home',\n  CALCULATOR = 'calculator',\n  RESULT = 'result',\n}\n\nexport const EquinorIcon: React.FunctionComponent<IProps> = (props) => {\n  const {\n    icon,\n    size,\n  } = props;\n  switch (icon) {\n    case Icon.MENU:\n      return <MenuIcon size={size}/>;\n    case Icon.USER:\n      return <UserIcon size={size}/>;\n    case Icon.HOME:\n      return <HomeIcon size={size}/>;\n    case Icon.CALCULATOR:\n      return <CalculatorIcon size={size}/>;\n    case Icon.RESULT:\n      return <ResultIcon size={size}/>;\n    default:\n      throw Error('Unknown icon');\n  }\n};\n\nEquinorIcon.defaultProps = {\n  size: 16,\n};","import React from \"react\";\nimport {EquinorIcon, Icon} from '../../assets/svg/EquinorIcon';\nimport styled from 'styled-components';\n\nconst NavBarStyled = styled.nav`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  height: 64px;\n  border-bottom: 2px solid #f7f7f7;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin-left: 50px;\n  align-items: center;\n  font-family: Equinor, serif;\n`;\n\nexport const NavBar = () => {\n  return (\n    <NavBarStyled>\n      <Header>\n        <EquinorIcon icon={Icon.MENU} size={24}/>\n        <span style={{marginLeft: '25px'}}>Neqsim</span>\n      </Header>\n      <div style={{marginRight: '50px'}}>\n        <EquinorIcon icon={Icon.USER} size={24}/>\n      </div>\n    </NavBarStyled>\n  );\n};\n","import './SiteMenu.css';\nimport styled from 'styled-components';\nimport React from \"react\";\nimport {Color} from '../../common/Color';\n\nconst SiteMenuStyled = styled.div`\n  min-width: 290px;\n  border-right: 2px solid ${Color.LIGHT_GRAY};\n  display: flex;\n  flex-direction: column;\n  \n  // This does not fit here, but not sure where to put it. Sets the fill color for the svg-icons in the links.\n  // react-router NavLink sets the .active css class on the a-tag when the page url matches the path.\n  .active {\n    rect, svg {\n      fill: ${Color.GREEN} !important;\n    }\n  }\n`;\n\nexport const SiteMenu: React.FunctionComponent = (props) => (\n  <SiteMenuStyled>\n    {props.children}\n  </SiteMenuStyled>\n);\n","import styled from 'styled-components';\nimport React from \"react\";\n\nconst SiteContentStyled = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: row;\n`;\n\nexport const SiteContent: React.FunctionComponent = (props) => (\n  <SiteContentStyled>\n    {props.children}\n  </SiteContentStyled>\n);\n","import React from 'react';\nimport {useQuery} from '@apollo/react-hooks';\nimport {gql} from 'apollo-boost';\nimport {PageContent} from '../components/ui/PageContent';\nimport {TitleBlock} from '../components/ui/TitleBlock';\nimport styled from 'styled-components';\n\nconst CALCULATIONS_QUERY = gql`\n    {\n        calculations {\n            id\n            ship {\n                id\n                name\n                country\n            }\n            fluid {\n                id\n                nitrogen {\n                    value\n                    unit\n                }\n                methane {\n                    value\n                    unit\n                }\n                ethane {\n                    value\n                    unit\n                }\n                propane {\n                    value\n                    unit\n                }\n                iButane {\n                    value\n                    unit\n                }\n                nButane {\n                    value\n                    unit\n                }\n                iPentane {\n                    value\n                    unit\n                }\n                nPentane {\n                    value\n                    unit\n                }\n                nHexane {\n                    value\n                    unit\n                }\n            }\n            transport {\n                id\n                volume\n                pressure\n                boilOffRate\n                fromDate\n                toDate\n            }\n            standard {\n                id\n                combustionTemperature\n                measurementTemperature\n                idealGasReferenceState\n            }\n        }\n    }\n`;\n\nexport interface Calculation {\n  id: string,\n  ship: {\n    id: string,\n    name: string,\n    country: string,\n  },\n  fluid: any,\n  transport: any,\n  standard: any,\n}\n\ninterface CalculationsData {\n  calculations: Calculation[],\n}\n\nconst ResultsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ResultItemStyled = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 20px;\n  align-items: center;\n`;\n\n// TODO: Create link to single result page\nconst ResultItem: React.FC<Calculation> = ({ship}) => (\n  <ResultItemStyled>\n    Ship: {ship.name} - {ship.country}\n  </ResultItemStyled>\n);\n\nexport const ResultsPage: React.FunctionComponent = () => {\n  const {loading, error, data} = useQuery<CalculationsData>(CALCULATIONS_QUERY);\n  if (loading) {\n    return <div>'Loading'</div>;\n  }\n  if (error) {\n    return <div>error</div>;\n  }\n\n  if (!data) {\n    return null;\n  }\n  return (\n    <PageContent>\n      <TitleBlock>Results</TitleBlock>\n      <ResultsWrapper>\n        {data.calculations.map((calculation: any) => {\n          return <ResultItem {...calculation}/>;\n        })}\n      </ResultsWrapper>\n    </PageContent>\n  );\n};","import React from 'react';\nimport {EquinorIcon, Icon, IProps as EquinorIconProps} from '../../assets/svg/EquinorIcon';\nimport styled from 'styled-components';\nimport {NavLink} from 'react-router-dom';\nimport {Color} from '../../common/Color';\n\ninterface SiteMenuLinkProps {\n  to: string,\n  name: string,\n  icon: Icon,\n}\nconst MenuLink = styled(NavLink).attrs({\n  activeStyle: {\n    color: Color.GREEN,\n  }\n})`\n  display: flex;\n  flex-direction: row;\n  padding: 20px 20px 20px 50px;\n  align-items: center;\n  color: black;\n  text-decoration: none;\n  font-family: Equinor,serif; // TODO: add Equinor-bold font\n`;\n\nconst MenuIconStyled = styled.div<React.FunctionComponent>`\n  margin-right: 20px;\n`;\n\nconst MenuIcon: React.FunctionComponent<EquinorIconProps> = (props) => (\n  <MenuIconStyled>\n    <EquinorIcon {...props}/>\n  </MenuIconStyled>\n);\n\nexport const SiteMenuLink: React.FunctionComponent<SiteMenuLinkProps> = ({to, icon, name}) => (\n  <MenuLink to={to}>\n    <MenuIcon icon={icon}/>\n    {name}\n  </MenuLink>\n);","import React from \"react\";\nimport {Redirect, Route, Switch} from \"react-router\";\nimport {LoginPage} from \"./app/pages/LoginPage\";\nimport {CalculatorPage} from \"./app/pages/CalculatorPage\";\nimport {NavBar} from \"./app/components/ui/NavBar\";\nimport {SiteMenu} from './app/components/ui/SiteMenu';\nimport {SiteContent} from './app/components/ui/SiteContent';\nimport {ResultsPage} from './app/pages/ResultsPage';\nimport {Icon} from './app/assets/svg/EquinorIcon';\nimport {SiteMenuLink} from './app/components/ui/SiteMenuLink';\n\nconst NotFound = () => (\n  <div>\n    Page not found\n  </div>\n);\n\nexport const App = () => (\n  <div style={{height: '100%'}}>\n    <NavBar/>\n    <SiteContent>\n      <SiteMenu>\n        <SiteMenuLink to=\"/calculator\" name=\"Calculator\" icon={Icon.CALCULATOR}/>\n        <SiteMenuLink to=\"/results\" name=\"Results\" icon={Icon.RESULT}/>\n      </SiteMenu>\n      <Switch>\n        <Redirect exact from=\"/\" to=\"/calculator\"/>\n        <Route path=\"/login\" component={LoginPage}/>\n        <Route path=\"/calculator\" component={CalculatorPage}/>\n        <Route path=\"/results\" component={ResultsPage}/>\n        <Route path=\"/\" component={NotFound}/>\n      </Switch>\n    </SiteContent>\n  </div>\n);","import \"./app/utils/css/reset.css\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {App} from \"./App\";\nimport ApolloClient from 'apollo-boost';\nimport {ApolloProvider} from '@apollo/react-hooks';\n\nconst client = new ApolloClient({\n  uri: '/graphql'\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <Router>\n      <App/>\n    </Router>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}