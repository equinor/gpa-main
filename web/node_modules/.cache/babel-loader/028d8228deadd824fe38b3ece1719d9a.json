{"ast":null,"code":"import _slicedToArray from \"/private/josas/workspace/neqsim/web/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/private/josas/workspace/neqsim/web/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/private/josas/workspace/neqsim/web/src/app/components/calculator/CalculateFormContainer.tsx\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    mutation Calculate($ship: ShipInput!, $liquid: FluidInput!, $transport: TransportInput!, $standard: StandardInput!) {\\n        addCalculation(ship: $ship, fluid: $liquid, transport: $transport, standard: $standard) {\\n            id\\n        }\\n    }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport { ShipSection } from './ShipSection';\nimport { LiquidComponentType, LiquidSection } from './LiguidSection';\nimport { gql } from 'apollo-boost';\nimport { useMutation } from '@apollo/react-hooks';\nconst CALCULATE = gql(_templateObject());\nexport const CalculateFormContainer = () => {\n  const _useState = useState({\n    name: '',\n    country: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        ship = _useState2[0],\n        setShip = _useState2[1];\n\n  const _useState3 = useState(new Map([[LiquidComponentType.NITROGEN, 0], [LiquidComponentType.METHANE, 0], [LiquidComponentType.ETHANE, 0], [LiquidComponentType.PROPANE, 0], [LiquidComponentType.I_BUTANE, 0], [LiquidComponentType.N_BUTANE, 0], [LiquidComponentType.I_PENTANE, 0], [LiquidComponentType.N_PENTANE, 0], [LiquidComponentType.N_HEXANE, 0]])),\n        _useState4 = _slicedToArray(_useState3, 2),\n        liquid = _useState4[0],\n        setLiquid = _useState4[1];\n\n  const _useMutation = useMutation(CALCULATE, {\n    variables: {\n      ship,\n      liquid: liquid.map,\n      transport: {\n        volume: 50,\n        pressure: 50,\n        boilOffRate: 50,\n        fromDate: \"2019-09-17T06:54:07Z\",\n        toDate: \"2019-09-17T06:54:07Z\"\n      },\n      standard: {\n        combustionTemperature: 15,\n        measurementTemperature: 15,\n        idealGasReferenceState: true\n      }\n    }\n  }),\n        _useMutation2 = _slicedToArray(_useMutation, 2),\n        addCalculation = _useMutation2[0],\n        data = _useMutation2[1].data;\n\n  console.log(data);\n  return React.createElement(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      addCalculation();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(ShipSection, {\n    ship: ship,\n    setShip: setShip,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(LiquidSection, {\n    liquid: liquid,\n    setLiquid: setLiquid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Compute\"));\n};","map":{"version":3,"sources":["/private/josas/workspace/neqsim/web/src/app/components/calculator/CalculateFormContainer.tsx"],"names":["React","useState","ShipSection","LiquidComponentType","LiquidSection","gql","useMutation","CALCULATE","CalculateFormContainer","name","country","ship","setShip","Map","NITROGEN","METHANE","ETHANE","PROPANE","I_BUTANE","N_BUTANE","I_PENTANE","N_PENTANE","N_HEXANE","liquid","setLiquid","variables","map","transport","volume","pressure","boilOffRate","fromDate","toDate","standard","combustionTemperature","measurementTemperature","idealGasReferenceState","addCalculation","data","console","log","e","preventDefault"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAcC,WAAd,QAAgC,eAAhC;AACA,SAAiCC,mBAAjC,EAAsDC,aAAtD,QAA0E,iBAA1E;AACA,SAAQC,GAAR,QAAkB,cAAlB;AACA,SAAQC,WAAR,QAA0B,qBAA1B;AAGA,MAAMC,SAAS,GAAGF,GAAH,mBAAf;AAQA,OAAO,MAAMG,sBAAsB,GAAG,MAAM;AAAA,oBAClBP,QAAQ,CAAO;AAACQ,IAAAA,IAAI,EAAE,EAAP;AAAWC,IAAAA,OAAO,EAAE;AAApB,GAAP,CADU;AAAA;AAAA,QACnCC,IADmC;AAAA,QAC7BC,OAD6B;;AAAA,qBAEdX,QAAQ,CAAC,IAAIY,GAAJ,CAAqC,CACtE,CAACV,mBAAmB,CAACW,QAArB,EAA+B,CAA/B,CADsE,EAEtE,CAACX,mBAAmB,CAACY,OAArB,EAA8B,CAA9B,CAFsE,EAGtE,CAACZ,mBAAmB,CAACa,MAArB,EAA6B,CAA7B,CAHsE,EAItE,CAACb,mBAAmB,CAACc,OAArB,EAA8B,CAA9B,CAJsE,EAKtE,CAACd,mBAAmB,CAACe,QAArB,EAA+B,CAA/B,CALsE,EAMtE,CAACf,mBAAmB,CAACgB,QAArB,EAA+B,CAA/B,CANsE,EAOtE,CAAChB,mBAAmB,CAACiB,SAArB,EAAgC,CAAhC,CAPsE,EAQtE,CAACjB,mBAAmB,CAACkB,SAArB,EAAgC,CAAhC,CARsE,EAStE,CAAClB,mBAAmB,CAACmB,QAArB,EAA+B,CAA/B,CATsE,CAArC,CAAD,CAFM;AAAA;AAAA,QAEnCC,MAFmC;AAAA,QAE3BC,SAF2B;;AAAA,uBAeTlB,WAAW,CAA6EC,SAA7E,EAAwF;AAClIkB,IAAAA,SAAS,EAAE;AACTd,MAAAA,IADS;AAETY,MAAAA,MAAM,EAAEA,MAAM,CAACG,GAFN;AAGTC,MAAAA,SAAS,EAAE;AACTC,QAAAA,MAAM,EAAE,EADC;AAETC,QAAAA,QAAQ,EAAE,EAFD;AAGTC,QAAAA,WAAW,EAAE,EAHJ;AAITC,QAAAA,QAAQ,EAAE,sBAJD;AAKTC,QAAAA,MAAM,EAAE;AALC,OAHF;AAUTC,MAAAA,QAAQ,EAAE;AAACC,QAAAA,qBAAqB,EAAE,EAAxB;AAA4BC,QAAAA,sBAAsB,EAAE,EAApD;AAAwDC,QAAAA,sBAAsB,EAAE;AAAhF;AAVD;AADuH,GAAxF,CAfF;AAAA;AAAA,QAenCC,cAfmC;AAAA,QAelBC,IAfkB,oBAelBA,IAfkB;;AA8B1CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAEA,SACE;AAAM,IAAA,QAAQ,EAAGG,CAAD,IAAO;AACrBA,MAAAA,CAAC,CAACC,cAAF;AACAL,MAAAA,cAAc;AACf,KAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAE1B,IAAnB;AAAyB,IAAA,OAAO,EAAEC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,oBAAC,aAAD;AAAe,IAAA,MAAM,EAAEW,MAAvB;AAA+B,IAAA,SAAS,EAAEC,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANF,CADF;AAUD,CA1CM","sourcesContent":["import React, {useState} from 'react';\nimport {Ship, ShipSection} from './ShipSection';\nimport {Liquid, LiquidComponent, LiquidComponentType, LiquidSection} from './LiguidSection';\nimport {gql} from 'apollo-boost';\nimport {useMutation} from '@apollo/react-hooks';\nimport {Calculation} from '../../pages/ResultsPage';\n\nconst CALCULATE = gql`\n    mutation Calculate($ship: ShipInput!, $liquid: FluidInput!, $transport: TransportInput!, $standard: StandardInput!) {\n        addCalculation(ship: $ship, fluid: $liquid, transport: $transport, standard: $standard) {\n            id\n        }\n    }\n`;\n\nexport const CalculateFormContainer = () => {\n  const [ship, setShip] = useState<Ship>({name: '', country: ''});\n  const [liquid, setLiquid] = useState(new Map<LiquidComponentType, number>([\n      [LiquidComponentType.NITROGEN, 0],\n      [LiquidComponentType.METHANE, 0],\n      [LiquidComponentType.ETHANE, 0],\n      [LiquidComponentType.PROPANE, 0],\n      [LiquidComponentType.I_BUTANE, 0],\n      [LiquidComponentType.N_BUTANE, 0],\n      [LiquidComponentType.I_PENTANE, 0],\n      [LiquidComponentType.N_PENTANE, 0],\n      [LiquidComponentType.N_HEXANE, 0],\n    ])\n  );\n\n  const [addCalculation, {data}] = useMutation<Calculation, { ship: Ship, liquid: Liquid, transport: any, standard: any }>(CALCULATE, {\n    variables: {\n      ship,\n      liquid: liquid.map,\n      transport: {\n        volume: 50,\n        pressure: 50,\n        boilOffRate: 50,\n        fromDate: \"2019-09-17T06:54:07Z\",\n        toDate: \"2019-09-17T06:54:07Z\"\n      },\n      standard: {combustionTemperature: 15, measurementTemperature: 15, idealGasReferenceState: true},\n    }\n  });\n\n  console.log(data);\n\n  return (\n    <form onSubmit={(e) => {\n      e.preventDefault();\n      addCalculation();\n    }}>\n      <ShipSection ship={ship} setShip={setShip}/>\n      <LiquidSection liquid={liquid} setLiquid={setLiquid}/>\n      <button>Compute</button>\n    </form>\n  );\n};"]},"metadata":{},"sourceType":"module"}