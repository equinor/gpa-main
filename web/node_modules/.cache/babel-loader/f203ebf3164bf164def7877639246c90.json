{"ast":null,"code":"import _slicedToArray from \"/private/josas/workspace/neqsim/web/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/private/josas/workspace/neqsim/web/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/private/josas/workspace/neqsim/web/src/app/components/calculator/CalculateFormContainer.tsx\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    mutation Calculate($ship: ShipInput!, $liquid: FluidInput!, $transport: TransportInput!, $standard: StandardInput!) {\\n        addCalculation(ship: $ship, fluid: $liquid, transport: $transport, standard: $standard) {\\n            id\\n        }\\n    }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport { ShipSection } from './ShipSection';\nimport { LiquidSection } from './LiguidSection';\nimport { gql } from 'apollo-boost';\nimport { useMutation } from '@apollo/react-hooks';\nconst CALCULATE = gql(_templateObject());\nexport const CalculateFormContainer = () => {\n  const _useState = useState({\n    name: '',\n    country: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        ship = _useState2[0],\n        setShip = _useState2[1];\n\n  const _useState3 = useState({\n    nitrogen: 0.691,\n    methane: 91.93,\n    ethane: 5.651,\n    propane: 1.296,\n    iButane: 0.122,\n    nButane: 0.289,\n    iPentane: 0.018,\n    nPentane: 0.003,\n    nHexane: 0.0\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        liquid = _useState4[0],\n        setLiquid = _useState4[1];\n\n  const _useMutation = useMutation(CALCULATE, {\n    variables: {\n      ship,\n      liquid: Object.keys(liquid).reduce((acc, componentName) => {\n        acc[componentName] = {\n          value: liquid[componentName],\n          unit: 'mol'\n        };\n        return acc;\n      }, {}),\n      transport: {\n        volume: 14000,\n        pressure: 1.013,\n        boilOffRate: 0.0015,\n        fromDate: \"2019-09-17T06:54:07Z\",\n        toDate: \"2019-09-17T06:54:07Z\"\n      },\n      standard: {\n        combustionTemperature: 15,\n        measurementTemperature: 15,\n        idealGasReferenceState: true\n      }\n    }\n  }),\n        _useMutation2 = _slicedToArray(_useMutation, 2),\n        addCalculation = _useMutation2[0],\n        data = _useMutation2[1].data;\n\n  return React.createElement(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      addCalculation();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(ShipSection, {\n    ship: ship,\n    setShip: setShip,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(LiquidSection, {\n    liquid: liquid,\n    setLiquid: setLiquid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Compute\"));\n};","map":{"version":3,"sources":["/private/josas/workspace/neqsim/web/src/app/components/calculator/CalculateFormContainer.tsx"],"names":["React","useState","ShipSection","LiquidSection","gql","useMutation","CALCULATE","CalculateFormContainer","name","country","ship","setShip","nitrogen","methane","ethane","propane","iButane","nButane","iPentane","nPentane","nHexane","liquid","setLiquid","variables","Object","keys","reduce","acc","componentName","value","unit","transport","volume","pressure","boilOffRate","fromDate","toDate","standard","combustionTemperature","measurementTemperature","idealGasReferenceState","addCalculation","data","e","preventDefault"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAcC,WAAd,QAAgC,eAAhC;AACA,SAAgBC,aAAhB,QAAoC,iBAApC;AACA,SAAQC,GAAR,QAAkB,cAAlB;AACA,SAAQC,WAAR,QAA0B,qBAA1B;AAGA,MAAMC,SAAS,GAAGF,GAAH,mBAAf;AAyBA,OAAO,MAAMG,sBAAsB,GAAG,MAAM;AAAA,oBAClBN,QAAQ,CAAO;AAACO,IAAAA,IAAI,EAAE,EAAP;AAAWC,IAAAA,OAAO,EAAE;AAApB,GAAP,CADU;AAAA;AAAA,QACnCC,IADmC;AAAA,QAC7BC,OAD6B;;AAAA,qBAEdV,QAAQ,CAAS;AAC3CW,IAAAA,QAAQ,EAAE,KADiC;AAE3CC,IAAAA,OAAO,EAAE,KAFkC;AAG3CC,IAAAA,MAAM,EAAE,KAHmC;AAI3CC,IAAAA,OAAO,EAAE,KAJkC;AAK3CC,IAAAA,OAAO,EAAE,KALkC;AAM3CC,IAAAA,OAAO,EAAE,KANkC;AAO3CC,IAAAA,QAAQ,EAAE,KAPiC;AAQ3CC,IAAAA,QAAQ,EAAE,KARiC;AAS3CC,IAAAA,OAAO,EAAE;AATkC,GAAT,CAFM;AAAA;AAAA,QAEnCC,MAFmC;AAAA,QAE3BC,SAF2B;;AAAA,uBAcTjB,WAAW,CAA+EC,SAA/E,EAA0F;AACpIiB,IAAAA,SAAS,EAAE;AACTb,MAAAA,IADS;AAETW,MAAAA,MAAM,EAAGG,MAAM,CAACC,IAAP,CAAYJ,MAAZ,CAAD,CAAoDK,MAApD,CAA2D,CAACC,GAAD,EAAMC,aAAN,KAAwB;AACzFD,QAAAA,GAAG,CAACC,aAAD,CAAH,GAAqB;AAACC,UAAAA,KAAK,EAAER,MAAM,CAACO,aAAD,CAAd;AAA+BE,UAAAA,IAAI,EAAE;AAArC,SAArB;AACA,eAAOH,GAAP;AACD,OAHO,EAGL,EAHK,CAFC;AAMTI,MAAAA,SAAS,EAAE;AAACC,QAAAA,MAAM,EAAE,KAAT;AAAgBC,QAAAA,QAAQ,EAAE,KAA1B;AAAiCC,QAAAA,WAAW,EAAE,MAA9C;AAAsDC,QAAAA,QAAQ,EAAE,sBAAhE;AAAwFC,QAAAA,MAAM,EAAE;AAAhG,OANF;AAOTC,MAAAA,QAAQ,EAAE;AAACC,QAAAA,qBAAqB,EAAE,EAAxB;AAA4BC,QAAAA,sBAAsB,EAAE,EAApD;AAAwDC,QAAAA,sBAAsB,EAAE;AAAhF;AAPD;AADyH,GAA1F,CAdF;AAAA;AAAA,QAcnCC,cAdmC;AAAA,QAclBC,IAdkB,oBAclBA,IAdkB;;AA0B1C,SACE;AAAM,IAAA,QAAQ,EAAGC,CAAD,IAAO;AACrBA,MAAAA,CAAC,CAACC,cAAF;AACAH,MAAAA,cAAc;AACf,KAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAE/B,IAAnB;AAAyB,IAAA,OAAO,EAAEC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,oBAAC,aAAD;AAAe,IAAA,MAAM,EAAEU,MAAvB;AAA+B,IAAA,SAAS,EAAEC,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANF,CADF;AAUD,CApCM","sourcesContent":["import React, {useState} from 'react';\nimport {Ship, ShipSection} from './ShipSection';\nimport {Liquid, LiquidSection} from './LiguidSection';\nimport {gql} from 'apollo-boost';\nimport {useMutation} from '@apollo/react-hooks';\nimport {Calculation} from '../../pages/ResultsPage';\n\nconst CALCULATE = gql`\n    mutation Calculate($ship: ShipInput!, $liquid: FluidInput!, $transport: TransportInput!, $standard: StandardInput!) {\n        addCalculation(ship: $ship, fluid: $liquid, transport: $transport, standard: $standard) {\n            id\n        }\n    }\n`;\n\ninterface MetricInput {\n  value: number,\n  unit: string,\n}\n\ninterface FluidInput {\n  nitrogen: MetricInput,\n  methane: MetricInput,\n  ethane: MetricInput,\n  propane: MetricInput,\n  iButane: MetricInput,\n  nButane: MetricInput,\n  iPentane: MetricInput,\n  nPentane: MetricInput,\n  nHexane: MetricInput,\n}\n\nexport const CalculateFormContainer = () => {\n  const [ship, setShip] = useState<Ship>({name: '', country: ''});\n  const [liquid, setLiquid] = useState<Liquid>({\n    nitrogen: 0.691,\n    methane: 91.93,\n    ethane: 5.651,\n    propane: 1.296,\n    iButane: 0.122,\n    nButane: 0.289,\n    iPentane: 0.018,\n    nPentane: 0.003,\n    nHexane: 0.0,\n  });\n\n  const [addCalculation, {data}] = useMutation<Calculation, {ship: Ship, liquid: FluidInput, transport: any, standard: any}>(CALCULATE, {\n    variables: {\n      ship,\n      liquid: (Object.keys(liquid) as Array<keyof typeof liquid>).reduce((acc, componentName) => {\n        acc[componentName] = {value: liquid[componentName], unit: 'mol'};\n        return acc;\n      }, {} as any),\n      transport: {volume: 14000, pressure: 1.013, boilOffRate: 0.0015, fromDate: \"2019-09-17T06:54:07Z\", toDate: \"2019-09-17T06:54:07Z\"},\n      standard: {combustionTemperature: 15, measurementTemperature: 15, idealGasReferenceState: true},\n    }\n  });\n\n  return (\n    <form onSubmit={(e) => {\n      e.preventDefault();\n      addCalculation();\n    }}>\n      <ShipSection ship={ship} setShip={setShip}/>\n      <LiquidSection liquid={liquid} setLiquid={setLiquid}/>\n      <button>Compute</button>\n    </form>\n  );\n};"]},"metadata":{},"sourceType":"module"}