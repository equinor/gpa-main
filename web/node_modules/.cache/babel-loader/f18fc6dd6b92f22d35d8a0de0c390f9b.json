{"ast":null,"code":"import _objectDestructuringEmpty from \"/private/josas/workspace/neqsim/web/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport _slicedToArray from \"/private/josas/workspace/neqsim/web/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/private/josas/workspace/neqsim/web/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/private/josas/workspace/neqsim/web/src/app/components/calculator/CalculateFormContainer.tsx\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    mutation Calculate($ship: Ship!, $liquid: Fluid!, $transport: Transport!, $standard: Standard!) {\\n        addCalculation(ship: $ship, fluid: $liquid, transport: $transport, standard: $standard) {\\n            id\\n        }\\n    }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport { ShipSection } from './ShipSection';\nimport { LiquidSection } from './LiguidSection';\nimport { gql } from 'apollo-boost';\nimport { useMutation } from '@apollo/react-hooks';\nconst CALCULATE = gql(_templateObject());\nexport const CalculateFormContainer = () => {\n  const _useState = useState({\n    name: '',\n    country: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        ship = _useState2[0],\n        setShip = _useState2[1];\n\n  const _useState3 = useState({\n    nitrogen: 0.0,\n    methane: 0.0,\n    ethane: 0.0,\n    propane: 0.0,\n    iButane: 0.0,\n    nButane: 0.0,\n    iPentane: 0.0,\n    nPentane: 0.0,\n    nHexane: 0.0\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        liquid = _useState4[0],\n        setLiquid = _useState4[1];\n\n  const _useMutation = useMutation(CALCULATE, {\n    variables: {\n      ship,\n      liquid,\n      transport: {\n        volume: 50,\n        pressure: 50,\n        boilOffRate: 50,\n        fromDate: \"2019-09-17T06:54:07Z\",\n        toDate: \"2019-09-17T06:54:07Z\"\n      },\n      standard: {}\n    }\n  });\n\n  _objectDestructuringEmpty(_useMutation);\n\n  return React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(ShipSection, {\n    ship: ship,\n    setShip: setShip,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(LiquidSection, {\n    liquid: liquid,\n    setLiquid: setLiquid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/private/josas/workspace/neqsim/web/src/app/components/calculator/CalculateFormContainer.tsx"],"names":["React","useState","ShipSection","LiquidSection","gql","useMutation","CALCULATE","CalculateFormContainer","name","country","ship","setShip","nitrogen","methane","ethane","propane","iButane","nButane","iPentane","nPentane","nHexane","liquid","setLiquid","variables","transport","volume","pressure","boilOffRate","fromDate","toDate","standard"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAcC,WAAd,QAAgC,eAAhC;AACA,SAAgBC,aAAhB,QAAoC,iBAApC;AACA,SAAQC,GAAR,QAAkB,cAAlB;AACA,SAAQC,WAAR,QAA0B,qBAA1B;AAGA,MAAMC,SAAS,GAAGF,GAAH,mBAAf;AAQA,OAAO,MAAMG,sBAAsB,GAAG,MAAM;AAAA,oBAClBN,QAAQ,CAAO;AAACO,IAAAA,IAAI,EAAE,EAAP;AAAWC,IAAAA,OAAO,EAAE;AAApB,GAAP,CADU;AAAA;AAAA,QACnCC,IADmC;AAAA,QAC7BC,OAD6B;;AAAA,qBAEdV,QAAQ,CAAS;AAC3CW,IAAAA,QAAQ,EAAE,GADiC;AAE3CC,IAAAA,OAAO,EAAE,GAFkC;AAG3CC,IAAAA,MAAM,EAAE,GAHmC;AAI3CC,IAAAA,OAAO,EAAE,GAJkC;AAK3CC,IAAAA,OAAO,EAAE,GALkC;AAM3CC,IAAAA,OAAO,EAAE,GANkC;AAO3CC,IAAAA,QAAQ,EAAE,GAPiC;AAQ3CC,IAAAA,QAAQ,EAAE,GARiC;AAS3CC,IAAAA,OAAO,EAAE;AATkC,GAAT,CAFM;AAAA;AAAA,QAEnCC,MAFmC;AAAA,QAE3BC,SAF2B;;AAAA,uBAc/BjB,WAAW,CAA2EC,SAA3E,EAAsF;AAC1GiB,IAAAA,SAAS,EAAE;AACTb,MAAAA,IADS;AAETW,MAAAA,MAFS;AAGTG,MAAAA,SAAS,EAAE;AAACC,QAAAA,MAAM,EAAE,EAAT;AAAaC,QAAAA,QAAQ,EAAE,EAAvB;AAA2BC,QAAAA,WAAW,EAAE,EAAxC;AAA4CC,QAAAA,QAAQ,EAAE,sBAAtD;AAA8EC,QAAAA,MAAM,EAAE;AAAtF,OAHF;AAITC,MAAAA,QAAQ,EAAE;AAJD;AAD+F,GAAtF,CAdoB;;AAAA;;AAuB1C,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAEpB,IAAnB;AAAyB,IAAA,OAAO,EAAEC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,aAAD;AAAe,IAAA,MAAM,EAAEU,MAAvB;AAA+B,IAAA,SAAS,EAAEC,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CA7BM","sourcesContent":["import React, {useState} from 'react';\nimport {Ship, ShipSection} from './ShipSection';\nimport {Liquid, LiquidSection} from './LiguidSection';\nimport {gql} from 'apollo-boost';\nimport {useMutation} from '@apollo/react-hooks';\nimport {Calculation} from '../../pages/ResultsPage';\n\nconst CALCULATE = gql`\n    mutation Calculate($ship: Ship!, $liquid: Fluid!, $transport: Transport!, $standard: Standard!) {\n        addCalculation(ship: $ship, fluid: $liquid, transport: $transport, standard: $standard) {\n            id\n        }\n    }\n`;\n\nexport const CalculateFormContainer = () => {\n  const [ship, setShip] = useState<Ship>({name: '', country: ''});\n  const [liquid, setLiquid] = useState<Liquid>({\n    nitrogen: 0.0,\n    methane: 0.0,\n    ethane: 0.0,\n    propane: 0.0,\n    iButane: 0.0,\n    nButane: 0.0,\n    iPentane: 0.0,\n    nPentane: 0.0,\n    nHexane: 0.0,\n  });\n\n  const {} = useMutation<Calculation, {ship: Ship, liquid: Liquid, transport: any, standard: any}>(CALCULATE, {\n    variables: {\n      ship,\n      liquid,\n      transport: {volume: 50, pressure: 50, boilOffRate: 50, fromDate: \"2019-09-17T06:54:07Z\", toDate: \"2019-09-17T06:54:07Z\"},\n      standard: {}\n    }\n  })\n\n  return (\n    <form>\n      <ShipSection ship={ship} setShip={setShip}/>\n      <LiquidSection liquid={liquid} setLiquid={setLiquid}/>\n    </form>\n  );\n};"]},"metadata":{},"sourceType":"module"}