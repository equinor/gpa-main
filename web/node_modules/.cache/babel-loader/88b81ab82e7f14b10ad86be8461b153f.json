{"ast":null,"code":"import _defineProperty from \"/private/josas/workspace/neqsim/web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"/private/josas/workspace/neqsim/web/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/private/josas/workspace/neqsim/web/src/app/components/calculator/LiguidSection.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  flex-grow: 1;\\n  margin-right: 25px;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: row;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport styled from 'styled-components';\nimport React from 'react';\nimport { FormSection } from '../ui/FormSection';\nimport { Label, NumberInput } from '../ui/Inputs'; // enum LiquidComponent {\n//   NITROGEN = 'nitrogen',\n//   METHANE = 'methane',\n//   ETHANE = 'ethane',\n//   PROPANE = 'propane',\n//   I_BUTANE = 'iButane',\n//   N_BUTANE = 'nButane',\n//   I_PENTANE = 'iPentane',\n//   N_PENTANE = 'nPentane',\n//   N_HEXANE = 'nHexane',\n// }\n\nconst LiquidInputs = styled.span(_templateObject());\nconst LiquidInput = styled.p(_templateObject2());\n\nconst LiquidComponentInput = ({\n  onChange,\n  componentName,\n  componentValue\n}) => {\n  return React.createElement(LiquidInput, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Label, {\n    htmlFor: \"liquid-\".concat(componentName),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, componentName), React.createElement(NumberInput, {\n    id: \"liquid-\".concat(componentName),\n    value: componentValue.toFixed(2),\n    onChange: e => onChange(parseFloat(e.target.value)),\n    step: \"0.01\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }));\n};\n\nexport const LiquidSection = ({\n  liquid,\n  setLiquid\n}) => React.createElement(FormSection, {\n  legendText: \"Liquid\",\n  index: 2,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70\n  },\n  __self: this\n}, React.createElement(LiquidInputs, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72\n  },\n  __self: this\n}, React.createElement(\"h3\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73\n  },\n  __self: this\n}, \"Standard gases\"), React.createElement(LiquidComponentInput, {\n  componentName: \"nitrogen\",\n  componentValue: liquid.nitrogen,\n  onChange: value => setLiquid(_objectSpread({}, liquid, {\n    nitrogen: value\n  })),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74\n  },\n  __self: this\n})), React.createElement(\"div\", {\n  style: {\n    flexGrow: 1,\n    height: '180px'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 80\n  },\n  __self: this\n}, React.createElement(\"h3\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 81\n  },\n  __self: this\n}, \"Light hydrocarbons\"), React.createElement(\"div\", {\n  style: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: 1,\n    flexWrap: 'wrap',\n    height: '100%'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 82\n  },\n  __self: this\n}, Object.keys(liquid).map(componentName => componentName !== 'nitrogen' && React.createElement(LiquidComponentInput, {\n  componentName: componentName,\n  componentValue: liquid[componentName],\n  onChange: value => setLiquid(_objectSpread({}, liquid, {\n    [componentName]: value\n  })),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 85\n  },\n  __self: this\n}))))));","map":{"version":3,"sources":["/private/josas/workspace/neqsim/web/src/app/components/calculator/LiguidSection.tsx"],"names":["styled","React","FormSection","Label","NumberInput","LiquidInputs","span","LiquidInput","p","LiquidComponentInput","onChange","componentName","componentValue","toFixed","e","parseFloat","target","value","LiquidSection","liquid","setLiquid","nitrogen","flexGrow","height","display","flexDirection","flexWrap","Object","keys","map"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,mBAA1B;AACA,SAAQC,KAAR,EAAeC,WAAf,QAAiC,cAAjC,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAoBA,MAAMC,YAAY,GAAGL,MAAM,CAACM,IAAV,mBAAlB;AAKA,MAAMC,WAAW,GAAGP,MAAM,CAACQ,CAAV,oBAAjB;;AAYA,MAAMC,oBAAyD,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA,aAAX;AAA0BC,EAAAA;AAA1B,CAAD,KAA+C;AAC/G,SACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,OAAO,mBAAYD,aAAZ,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,aADH,CADF,EAIE,oBAAC,WAAD;AACE,IAAA,EAAE,mBAAYA,aAAZ,CADJ;AAEE,IAAA,KAAK,EAAEC,cAAc,CAACC,OAAf,CAAuB,CAAvB,CAFT;AAGE,IAAA,QAAQ,EAAEC,CAAC,IAAIJ,QAAQ,CAACK,UAAU,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAAX,CAHzB;AAIE,IAAA,IAAI,EAAC,MAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAaD,CAdD;;AAgBA,OAAO,MAAMC,aAA2C,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA;AAAT,CAAD,KACzD,oBAAC,WAAD;AAAa,EAAA,UAAU,EAAC,QAAxB;AAAiC,EAAA,KAAK,EAAE,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,oBAAC,oBAAD;AACE,EAAA,aAAa,EAAC,UADhB;AAEE,EAAA,cAAc,EAAED,MAAM,CAACE,QAFzB;AAGE,EAAA,QAAQ,EAAEJ,KAAK,IAAIG,SAAS,mBAAKD,MAAL;AAAaE,IAAAA,QAAQ,EAAEJ;AAAvB,KAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,CADF,EASE;AAAK,EAAA,KAAK,EAAE;AAACK,IAAAA,QAAQ,EAAE,CAAX;AAAcC,IAAAA,MAAM,EAAE;AAAtB,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE;AAAK,EAAA,KAAK,EAAE;AAACC,IAAAA,OAAO,EAAE,MAAV;AAAkBC,IAAAA,aAAa,EAAE,QAAjC;AAA2CH,IAAAA,QAAQ,EAAE,CAArD;AAAwDI,IAAAA,QAAQ,EAAE,MAAlE;AAA0EH,IAAAA,MAAM,EAAE;AAAlF,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEKI,MAAM,CAACC,IAAP,CAAYT,MAAZ,CAAD,CAAoDU,GAApD,CAAwDlB,aAAa,IAAIA,aAAa,KAAK,UAAlB,IACvE,oBAAC,oBAAD;AACE,EAAA,aAAa,EAAEA,aADjB;AAEE,EAAA,cAAc,EAAEQ,MAAM,CAACR,aAAD,CAFxB;AAGE,EAAA,QAAQ,EAAEM,KAAK,IAAIG,SAAS,mBAAKD,MAAL;AAAa,KAACR,aAAD,GAAiBM;AAA9B,KAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CAFJ,CAFF,CATF,CADF,CADK","sourcesContent":["import styled from 'styled-components';\nimport React from 'react';\nimport {FormSection} from '../ui/FormSection';\nimport {Label, NumberInput} from '../ui/Inputs';\n\n// enum LiquidComponent {\n//   NITROGEN = 'nitrogen',\n//   METHANE = 'methane',\n//   ETHANE = 'ethane',\n//   PROPANE = 'propane',\n//   I_BUTANE = 'iButane',\n//   N_BUTANE = 'nButane',\n//   I_PENTANE = 'iPentane',\n//   N_PENTANE = 'nPentane',\n//   N_HEXANE = 'nHexane',\n// }\n\nexport interface Liquid {\n  nitrogen: number,\n  methane: number,\n  ethane: number,\n  propane: number,\n  iButane: number,\n  nButane: number,\n  iPentane: number,\n  nPentane: number,\n  nHexane: number,\n}\n\ninterface LiquidSectionProps {\n  liquid: Liquid,\n\n  setLiquid(liquid: Liquid): void,\n}\n\nconst LiquidInputs = styled.span`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst LiquidInput = styled.p`\n  flex-grow: 1;\n  margin-right: 25px;\n`;\n\ninterface LiquidComponentInputProps {\n  componentName: string,\n  componentValue: number,\n\n  onChange(value: number): void,\n}\n\nconst LiquidComponentInput: React.FC<LiquidComponentInputProps> = ({onChange, componentName, componentValue}) => {\n  return (\n    <LiquidInput>\n      <Label htmlFor={`liquid-${componentName}`}>\n        {componentName}\n      </Label>\n      <NumberInput\n        id={`liquid-${componentName}`}\n        value={componentValue.toFixed(2)}\n        onChange={e => onChange(parseFloat(e.target.value))}\n        step='0.01'\n      />\n    </LiquidInput>\n  );\n};\n\nexport const LiquidSection: React.FC<LiquidSectionProps> = ({liquid, setLiquid}) => (\n  <FormSection legendText='Liquid' index={2}>\n    <LiquidInputs>\n      <div>\n        <h3>Standard gases</h3>\n        <LiquidComponentInput\n          componentName='nitrogen'\n          componentValue={liquid.nitrogen}\n          onChange={value => setLiquid({...liquid, nitrogen: value})}\n        />\n      </div>\n      <div style={{flexGrow: 1, height: '180px'}}>\n        <h3>Light hydrocarbons</h3>\n        <div style={{display: 'flex', flexDirection: 'column', flexGrow: 1, flexWrap: 'wrap', height: '100%'}}>\n          {\n            (Object.keys(liquid) as Array<keyof typeof liquid>).map(componentName => componentName !== 'nitrogen' && (\n              <LiquidComponentInput\n                componentName={componentName}\n                componentValue={liquid[componentName]}\n                onChange={value => setLiquid({...liquid, [componentName]: value})}\n              />\n            ))\n          }\n        </div>\n      </div>\n    </LiquidInputs>\n  </FormSection>\n);"]},"metadata":{},"sourceType":"module"}