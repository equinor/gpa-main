{"ast":null,"code":"import _taggedTemplateLiteral from \"/private/josas/workspace/neqsim/web/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/private/josas/workspace/neqsim/web/src/app/pages/ResultsPage.tsx\";\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: row;\\n  padding: 20px;\\n  align-items: center;\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    {\\n        calculations {\\n            id\\n            ship {\\n                id\\n                name\\n                country\\n            }\\n            fluid {\\n                id\\n                nitrogen {\\n                    value\\n                    unit\\n                }\\n                methane {\\n                    value\\n                    unit\\n                }\\n                ethane {\\n                    value\\n                    unit\\n                }\\n                propane {\\n                    value\\n                    unit\\n                }\\n                iButane {\\n                    value\\n                    unit\\n                }\\n                nButane {\\n                    value\\n                    unit\\n                }\\n                iPentane {\\n                    value\\n                    unit\\n                }\\n                nPentane {\\n                    value\\n                    unit\\n                }\\n                nHexane {\\n                    value\\n                    unit\\n                }\\n            }\\n            transport {\\n                id\\n                volume\\n                pressure\\n                boilOffRate\\n                fromDate\\n                toDate\\n            }\\n            standard {\\n                id\\n                combustionTemperature\\n                measurementTemperature\\n                idealGasReferenceState\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport { PageContent } from '../components/ui/PageContent';\nimport { TitleBlock } from '../components/ui/TitleBlock';\nimport styled from 'styled-components';\nconst CALCULATIONS_QUERY = gql(_templateObject());\nconst ResultsWrapper = styled.div(_templateObject2());\nconst ResultItemStyled = styled.div(_templateObject3()); // TODO: Create link to single result page\n\nconst ResultItem = ({\n  ship\n}) => React.createElement(ResultItemStyled, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 104\n  },\n  __self: this\n}, \"Ship: \", ship.name, \" - \", ship.country);\n\nexport const ResultsPage = () => {\n  const _useQuery = useQuery(CALCULATIONS_QUERY),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data;\n\n  if (loading) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"'Loading'\");\n  }\n\n  if (error) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"error\");\n  }\n\n  if (!data) {\n    return null;\n  }\n\n  return React.createElement(PageContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(TitleBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Results\"), React.createElement(ResultsWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, data.calculations.map(calculation => {\n    return React.createElement(ResultItem, Object.assign({}, calculation, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }));\n  })));\n};","map":{"version":3,"sources":["/private/josas/workspace/neqsim/web/src/app/pages/ResultsPage.tsx"],"names":["React","useQuery","gql","PageContent","TitleBlock","styled","CALCULATIONS_QUERY","ResultsWrapper","div","ResultItemStyled","ResultItem","ship","name","country","ResultsPage","loading","error","data","calculations","map","calculation"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,qBAAvB;AACA,SAAQC,GAAR,QAAkB,cAAlB;AACA,SAAQC,WAAR,QAA0B,8BAA1B;AACA,SAAQC,UAAR,QAAyB,6BAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,kBAAkB,GAAGJ,GAAH,mBAAxB;AAkFA,MAAMK,cAAc,GAAGF,MAAM,CAACG,GAAV,oBAApB;AAKA,MAAMC,gBAAgB,GAAGJ,MAAM,CAACG,GAAV,oBAAtB,C,CAOA;;AACA,MAAME,UAAiC,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KACxC,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACSA,IAAI,CAACC,IADd,SACuBD,IAAI,CAACE,OAD5B,CADF;;AAMA,OAAO,MAAMC,WAAoC,GAAG,MAAM;AAAA,oBACzBb,QAAQ,CAAmBK,kBAAnB,CADiB;AAAA,QACjDS,OADiD,aACjDA,OADiD;AAAA,QACxCC,KADwC,aACxCA,KADwC;AAAA,QACjCC,IADiC,aACjCA,IADiC;;AAExD,MAAIF,OAAJ,EAAa;AACX,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACD;;AACD,MAAIC,KAAJ,EAAW;AACT,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AACD;;AAED,MAAI,CAACC,IAAL,EAAW;AACT,WAAO,IAAP;AACD;;AACD,SACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,IAAI,CAACC,YAAL,CAAkBC,GAAlB,CAAuBC,WAAD,IAAsB;AAC3C,WAAO,oBAAC,UAAD,oBAAgBA,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAFA,CADH,CAFF,CADF;AAUD,CAtBM","sourcesContent":["import React from 'react';\nimport {useQuery} from '@apollo/react-hooks';\nimport {gql} from 'apollo-boost';\nimport {PageContent} from '../components/ui/PageContent';\nimport {TitleBlock} from '../components/ui/TitleBlock';\nimport styled from 'styled-components';\n\nconst CALCULATIONS_QUERY = gql`\n    {\n        calculations {\n            id\n            ship {\n                id\n                name\n                country\n            }\n            fluid {\n                id\n                nitrogen {\n                    value\n                    unit\n                }\n                methane {\n                    value\n                    unit\n                }\n                ethane {\n                    value\n                    unit\n                }\n                propane {\n                    value\n                    unit\n                }\n                iButane {\n                    value\n                    unit\n                }\n                nButane {\n                    value\n                    unit\n                }\n                iPentane {\n                    value\n                    unit\n                }\n                nPentane {\n                    value\n                    unit\n                }\n                nHexane {\n                    value\n                    unit\n                }\n            }\n            transport {\n                id\n                volume\n                pressure\n                boilOffRate\n                fromDate\n                toDate\n            }\n            standard {\n                id\n                combustionTemperature\n                measurementTemperature\n                idealGasReferenceState\n            }\n        }\n    }\n`;\n\nexport interface Calculation {\n  id: string,\n  ship: {\n    id: string,\n    name: string,\n    country: string,\n  },\n  fluid: any,\n  transport: any,\n  standard: any,\n}\n\ninterface CalculationsData {\n  calculations: Calculation[],\n}\n\nconst ResultsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ResultItemStyled = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 20px;\n  align-items: center;\n`;\n\n// TODO: Create link to single result page\nconst ResultItem: React.FC<Calculation> = ({ship}) => (\n  <ResultItemStyled>\n    Ship: {ship.name} - {ship.country}\n  </ResultItemStyled>\n);\n\nexport const ResultsPage: React.FunctionComponent = () => {\n  const {loading, error, data} = useQuery<CalculationsData>(CALCULATIONS_QUERY);\n  if (loading) {\n    return <div>'Loading'</div>;\n  }\n  if (error) {\n    return <div>error</div>;\n  }\n\n  if (!data) {\n    return null;\n  }\n  return (\n    <PageContent>\n      <TitleBlock>Results</TitleBlock>\n      <ResultsWrapper>\n        {data.calculations.map((calculation: any) => {\n          return <ResultItem {...calculation}/>;\n        })}\n      </ResultsWrapper>\n    </PageContent>\n  );\n};"]},"metadata":{},"sourceType":"module"}